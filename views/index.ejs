<!DOCTYPE html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title><%= title %></title>

		<meta name="description" content="Host Your Own Open Source Heroku">
		<meta name="author" content="Rita Zhang">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/pikestreet.css" id="theme">

		<!-- Code syntax highlighting - also available: visualstudio.css & zenburn.css -->
		<link rel="stylesheet" href="lib/css/github.css">

		<!-- Icons -->
		<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal pikestreet">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section data-background-video="https://s3-us-west-2.amazonaws.com/coverr/mp4/White-Keyboard.mp4">
					<div>
						<h2>Host Your Own</h2>
						<h2>Open Source Heroku</h2>
						<!-- <h2><%= title %></h2> -->
					</div>
					<br/>
					<p>
						Rita Zhang
						<br/>
						Open Source Engineer @ Microsoft
						<br/>
						<a href="https://twitter.com/ritazzhang">@ritazzhang</a> | <a href="https://twitter.com/hashtag/DecodedConf">#DecodedConf</a>
					</p>
					<aside class="notes">
					Whether you are a startup or an enterprise, you want happy and productive developers. Using containers, git, and orchestrators, you can now host and manage your own open source platforms similar to Heroku across clusters of machines for your organization. This providers self-service features to developers so they can focus on building awesome apps instead of worrying about infrastructure. Meanwhile, it removes an organization's dependencies on Heroku and reduces compute cost. 
					</aside>
				</section>
				<section data-background-video="https://s3-us-west-2.amazonaws.com/coverr/mp4/Coder.mp4">
					<div class="accent">
						<h2>I am a developer</h2>
						<p>I just want to focus on building apps</p>
					</div>
				</section>
				<section data-background="#ffffff">
					<h1>What is Heroku?</h1>
					<img src="img/heroku.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					<ul>
						<li class="fragment roll-in">Hosted PaaS</li>
						<li class="fragment roll-in">Users deploy their application via git push</li>
						<li class="fragment roll-in">Rich ecosystem of add-ons for 3rd party integration</li>
						<li class="fragment roll-in">Many options for logging, caching, monitoring</li>
						<li class="fragment roll-in">Perform commands via Heroku toolbelt CLI</li>
					</ul>
					<aside class="notes">
						<p>
						Cloud Platform as a Service which supports application written in for Ruby, Java, Node.js, Scala, Clojure, Python and PHP and (undocumented) Perl.
						</p>
						<p>
						users deploy their application on Heroku by simply performing a ‘git push’.
						</p>
						<p>
						many plugins for various things such as connecting with databases, monitoring performance and logging
						</p>
					</aside>
				</section>

				<section data-background="#ffffff">
					<h1>Container vs VM</h1>
					<img src="img/containersvsvm.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					<aside class="notes">
						<p>
						In VMs, each virtualized app inclues not only the application, its binaries and dependencies, but also the entire guest OS.
						</p>
						<p>
						Containers comprise just the application and its dependencies. It runs as an isolated process in userspace on the host OS, sharing the kernel with other containers. Sharing resources, dependencies, but still maintain isolation. Quick to spin up and down.
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<img src="img/containerappdiff.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section data-background="#ffffff">
					<img src="img/herokudeployprocess.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					<aside class="notes">
						<p>
						When application is pushed to Heroku it turns the code into an executable slug, which includes your application code and all of it's dependencies.
						Heroku Buildpacks provide framework and runtime support for your applications. 
						</p>
						<p>
						Buildpacks typically examine user-provided artifacts to determine what dependencies to download and how to configure applications to communicate with bound services.
						Steps:
							1: Detect language
							2: Compile
							3: Release
						</p>
					</aside>
				</section>
				<section data-markdown>
					<script type="text/template">
					<h2>Deploying to Heroku</h2>
					```
					$  heroku create myapp
					Creating myapp... done, stack is cedar-14
					http://myapp.herokuapp.com/ | https://git.heroku.com/myapp.git
					Git remote heroku added

					$  git remote -v
					heroku  https://git.heroku.com/myapp.git (fetch)
					heroku  https://git.heroku.com/myapp.git (push)

					$ git commit -m "commit for deploy to heroku"
					...

					$  git push heroku master
					Initializing repository, done.
					updating 'refs/heads/master'
					...

					```
					</script>
					<aside class="notes">
					<p>
					</p>
					</aside>
				</section>

				<section data-background-size="700px" ><!-- patternbg.png -->
					<section>
						<h1>Let's Host Our Own Private Heroku!</h1>
						<img src="img/logos.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					</section>
				</section>
					<section><img src="img/dokkutopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					</section>

				<section>
					<h2>What do They All Have in Common?</h2>
					<ul>
						<li class="fragment roll-in">Application Platform (PaaS)</li>
						<li class="fragment roll-in">Open Source</li>
						<li class="fragment roll-in">Smart Containers</li>
						<li class="fragment roll-in">Continuous Delivery</li>
						<li class="fragment roll-in">Scale Instantly</li>
						<li class="fragment roll-in">Focus on 12 Factor Apps</li>
						<li class="fragment roll-in">Rich Add-ons</li>
						<li class="fragment roll-in">Code Rollback</li>
						<li class="fragment roll-in">Buildpacks for App Dependencies</li>
						<li class="fragment roll-in">Zero-downtime deploy</li>
					</ul>
					<aside class="notes">
						<p>
						These are all open source platforms for deploying, scaling and managing applications.
						</p>
						<p>
						Unlike a hosted PaaS like Heroku, these platforms are designed to run anywhere in cloud, or on Premises. It's essentially a "Private Heroku". Build once, run anywhere.
						</p>
						<p>For runtime, they all have smart containers with fully managed runtime environment, configuration, orchestration, load balancing, failover, logging, and security support.
						</p>
						<p>
						With native git integration, you can push updates and manage releases directly to these platforms. You can also integrate with other systems like GitHub, TravisCI, Jenkins to make building, iterating, and staging apps easier.
						</p>
						<p>
						You can scale components in your application in an instant, both vertically and horizontally.
						</p>
						<p>
						They all follow the same philosophy as Heroku with the 12 factor apps methodology. It focuses on supporting applications that need to run well across a distributed system. http://12factor.net/
						</p>
						<p>
						They each have their own ecosystems of add-ons that allow you to extend your application with pre-integrated services
						</p>
						<p>
						With native git integration, you can manage releases, deploy updates, and perform code rollback using the normal git workflow process.
						</p>
						<p>
						TODO:
						As a developer, I want to work with language and frameworks I already love. These platforms all support existing Herokuish Buildpacks that support most of the common frameworks and language we use today. As Buildpacks are extensible, you can develop your own custom buildpacks to support dependencies in your application.
						</p>
					</aside>
				</section>

				<section>
					<h1>What Does This Mean for Me?</h1>
					<aside class="notes">
						<p>
						The goal of a PaaS is to empower software teams to take responsibility for the entire application lifecycle.
						With a PaaS, developers deploy, scale and manage their own applications and CI/CD pipelines
						without having to involve the operations team.
						</p>
						<p>
						This is more than an "Orchestration tool" which helps you run containers across a distributed system. It includes orchestration features, but it is much more than orchestration.
						</p>
					</aside>
				</section>

				<section>
					<h2>Developer Self-Service</h2>
					<ul>
						<li class="fragment roll-in">Create applications</li>
						<li class="fragment roll-in">Deploy code or Docker images</li>
						<li class="fragment roll-in">Configure runtime environment</li>
						<li class="fragment roll-in">Manage releases and rollbacks</li>
						<li class="fragment roll-in">View aggregated logs</li>
						<li class="fragment roll-in">Scale via the process model</li>
						<li class="fragment roll-in">Share resources</li>
						<li class="fragment roll-in">Collaborate with a team</li>
					</ul>
					<aside class="notes">
						<p>
						PaaS provides developers with a self-service capability.
						</p>
						<p>
						With a PaaS, developers to create applications, push deploys with git, manage runtime configuration,
						handle releases and rollbacks, run admin tasks like schema migrations, view aggregated logs,
						scale the number of containers in service -- tasks typically associated with operations, not developers.
						</p>
						<p>
						If you've ever seen Heroku in action, you'll know that a developer with self-service capabilities
						can be amazingly productive -- and more importantly, happy!  Who doesn't want happy developers?
						</p>
					</aside>
				</section>

				<section data-background="#ffffff">
					<img src="img/dokku.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What is Dokku?</h1>
					<br/>
					<ul>
						<li class="fragment roll-in">Docker powered mini-Heroku ~200 lines of Bash</li>
						<li class="fragment roll-in">100% open source</li>
						<li class="fragment roll-in">~11,547 stars, ~350 watchers, ~1,011 forks</li>
						<li class="fragment roll-in">Push any Heroku-compatible applications via Git</li>
						<li class="fragment roll-in">Extensible with dokku plugins</li>
						<li class="fragment roll-in">Single-host instance, not multi-host, multi-tenant</li>
						<li class="fragment roll-in">Dockerfile deployment, image tagging</li>
						<li class="fragment roll-in">Zero-downtime deploy</li>
					</ul>
					<aside class="notes">
						<p>
						Dokku is an open source platform for deploying, scaling and managing applications.
						</p>
						<p>
						Powered by Docker, you can install Dokku on any hardware that runs a VM with Ubuntu 14.04 x64 or cloud providers like Azure, DigitalOcean, etc
						</p>
						<p>
						Dokku is currently sponsored by the multi-host PaaS project Deis.
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<img src="img/dokkutopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					<aside class="notes">
						<p>
						VM, Storage account, NIC, Public IP, vNet
						</p>
					</aside>
				</section>
				<section data-markdown>
					<script type="text/template">
					<h2>Deploying to Dokku</h2>
					```
					$ dokku apps
					$ dokku apps:create myapp

					Add a service like mongo:
					$ sudo dokku plugin:install https://github.com/dokku/dokku-mongo.git mongo
					$ dokku mongo:create mongo

					Bind the service to app:
					$ dokku mongo:link mongo myapp

					Deploy an app
					$ git remote add dokku dokku@...
					$ git push dokku master

					Scale the app
					$ dokku ps:scale myapp web=2

					Set environment variables
					$ dokku config:set myapp MYVARIABLE=myvalue

					```
					</script>
				</section>

				<section data-background="#ffffff">
					<img src="img/DeisLogo.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What is Deis?</h1>
					<br/>
					<ul>
						<li class="fragment roll-in">100% open source</li>
						<li class="fragment roll-in">~5,516 stars, ~289 watchers, ~865 forks</li>
						<li class="fragment roll-in">Go, Python &amp; Shell</li>
						<li class="fragment roll-in">Multi-host PaaS</li>
						<li class="fragment roll-in">Integrate with open source ecosystem</li>
					</ul>
					<aside class="notes">
						<p>
						Deis is an open source platform that makes it simple for developers to deploy their applications; quickly moving code to production
						</p>
						<p>
						The platform itself is mostly Go with a mix of Python and some Shell glue.
						</p>
						<p>
						The project has solid traction on GitHub. 
						growing users and contributors.
						</p>
						<p>
						Rather than build it all on their own, they integrated with adjancent projects and brought all that goodness into Deis. For example, the latest version comes with kubernetes and mesos scheduler. 
						</p>
						<p>
						Works with Heroku buildpacks and Cloud Foundry buildpacks. They are also considering using Cloud Foundry service brokers to integrate with other services.
						</p>
					</aside>
				</section>

				<section>
					<img src="img/DeisFoundation.png" class="stretch" style="border:none;background:none;box-shadow:0 0 0"/>
					<aside class="notes">
						<p>
						At the most basic level, Deis runs on CoreOS which provides a lightweight operating system
						that includes etcd, a distributed data store similar to Zookeeper but based on the Raft protocol.
						It also includes Fleet, which is a simple cluster scheduler that's backed by etcd.
						</p>
						<p>
						On top of CoreOS sits Docker, which is central to Deis.
						Everything Deis does, it does inside a Docker container.
						The applications we deploy are run as Docker containers.
						The platform itself is a series of Docker containers.
						This makes Deis incredibly easy to operate and easy to hack on.
						</p>
					</aside>
				</section>   

				<section data-background="#ffffff">
					<img src="img/deistopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
				<section data-background="#ffffff">
					<img src="img/DeisGitPushWorkflow.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
			
				<section data-background="#ffffff">
					<img src="img/cflogo.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What is Cloud Foundry?</h1>
					<br/>
					<ul>
						<li class="fragment roll-in">Open source PaaS with Enterprise offerings</li>
						<li class="fragment roll-in">1,300 contributors, 711K lines of code, 3,000 PRs</li>
						<li class="fragment roll-in">Has it's own Buildpacks, similar to Heroku</li>
						<li class="fragment roll-in">Rich add-ons for 3rd party integration</li>
						<li class="fragment roll-in">A Marketplace of apps and services</li>
						<li class="fragment roll-in">App Metrics</li>
					</ul>
					<aside class="notes">
						<p>
						CF is an open source PaaS, originally developed by VMware and now owned by Pivotal, startup in SF. 
						</p>
						<p>
						It has a solid reputation in the enterprise space powering products such as IBM Bluemix and the Chinese search engine Baidu. New deal with Yahoo Japan.
						</p>
						<p>
						Provides developers easy access to services like databases, messaging services, caching, etc
						<p>
						Similar to Heroku, developers can deploy applications using a variety of CF buildpacks to package the framework and runtime dependencies required for their application.
						</p>
						<p>
						App Metrics - built-in monitoring of throughput, response times, memory, CPU load, and errors. Offers a Web-based Dashboard that allows developers to manage app and view performance.
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<img src="img/cftopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
				<section data-background="#000000">
					<img src="img/cfarch.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">	
					<aside class="notes">
						<p>
						DEA manages Warden containers, stages and runs apps. It uses consul for service discovery to be datacenter aware. 
						</p>
						<p>
						When a new application or a new version of an application is pushed to Cloud Foundry, the Cloud Controller selects a DEA from the pool of available DEAs to stage the application. The DEA uses the appropriate buildpack to stage the application. 
						</p>
						<p>
						Warden provides a simple API for managing isolated environments or containers. These containers can be limited in terms of CPU usage, memory usage, disk usage, and network access. The only currently supported OS is Linux.
						</p>
					</aside>
				</section>

				<section data-markdown>
					<script type="text/template">
					<h2>Deploying to Cloud Foundry</h2>
					```
					Deploy an app
					$ cf push myapp

					Deploy a 3rd party service
					$ cf marketplace
					$ cf create-service p-mysql 100mb-dev mysqldev

					Bind service to my app
					$ cf bind-service myapp mysqldev
					$ cf restage myapp

					Configure and view app info
					$ cf env myapp

					Scale
					$ cf scale myapp -i 2
					```
					</script>
				</section>
				<section data-background="img/patternbg.png" >
					<h1>Resources</h1>
					<br/>
					<ul>
						<li><a href="https://dokku.viewdocs.io/dokku/">https://dokku.viewdocs.io/dokku/</a></li>
						<li><a href="https://docs.deis.io/en/latest/">https://docs.deis.io/en/latest/</a></li>
						<li><a href="https://docs.cloudfoundry.org">https://docs.cloudfoundry.org</a></li>
					</ul>
				</section>
				<section data-background-video="https://s3-us-west-2.amazonaws.com/coverr/mp4/Aloha-Mundo.mp4">
					<h1>Q&A</h1>
					<br/>
					github/ritazh | @ritazzhang | https://ritazh.com
				</section>
			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.js"></script>
		<script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>
		<script src="js/pikestreet.js"></script>
	</body>
</html>
