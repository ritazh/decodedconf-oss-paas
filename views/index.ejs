<!DOCTYPE html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title><%= title %></title>

		<meta name="description" content="Host Your Own Open Source Heroku">
		<meta name="author" content="Rita Zhang">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/pikestreet.css" id="theme">

		<!-- Code syntax highlighting - also available: visualstudio.css & zenburn.css -->
		<link rel="stylesheet" href="lib/css/github.css">

		<!-- Icons -->
		<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal pikestreet">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section data-background-video="https://s3-us-west-2.amazonaws.com/coverr/mp4/White-Keyboard.mp4">
					<div class="accent">
						<h2><%= title %></h2>
						<h1></h1>
					</div>
					<p>
						<small><a href="http://ritazh.com">Rita Zhang</a></small>
						<br/>
						<small>Open Source Engineer @ Microsoft</small>
						<br/>
						<small><a href="http://twitter.com/ritazzhang">@ritazzhang</a></small>
					</p>
					<aside class="notes">
					Whether you are a startup or an enterprise, you want happy and productive developers. Using containers, git, and orchestrators, you can now host and manage your own open source platforms similar to Heroku across clusters of machines for your organization. This providers self-service features to developers so they can focus on building awesome apps instead of worrying about infrastructure. Meanwhile, it removes an organization's dependencies on Heroku and reduces compute cost. 
					</aside>
				</section>
				<section data-background-video="https://s3-us-west-2.amazonaws.com/coverr/mp4/Coder.mp4">
					<div class="accent">
						<h2>I am a developer</h2>
						<p>I just want to focus on building apps</p>
					</div>
				</section>
				<section data-background="#ffffff">
					<h1>What is Heroku?</h1>
					<img src="img/heroku.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					<ul>
						<li>Hosted PaaS</li>
						<li>Users deploy their application via git push</li>
						<li>Rich ecosystem of add-ons for 3rd party integration</li>
						<li>Many options for logging, caching, monitoring</li>
						<li>Perform commands via Heroku toolbelt CLI</li>
					</ul>
					<aside class="notes">
						<p>
						Cloud Platform as a Service which supports application written in for Ruby, Java, Node.js, Scala, Clojure, Python and PHP and (undocumented) Perl.
						</p>
						<p>
						users deploy their application on Heroku by simply performing a ‘git push’.
						</p>
						<p>
						many plugins for various things such as connecting with databases, monitoring performance and logging
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<h1>What is Heroku?</h1>
					<img src="img/herokudeployprocess.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
					<aside class="notes">
						<p>
						When application is pushed to Heroku it turns the code into an executable slug, which includes your application code and all of it's dependencies.
						Heroku Buildpacks provide framework and runtime support for your applications. 
						</p>
						<p>
						Buildpacks typically examine user-provided artifacts to determine what dependencies to download and how to configure applications to communicate with bound services.
						Steps:
							1: Detect language
							2: Compile
							3: Release
						</p>
					</aside>
				</section>

				<section data-background="img/patternbg.png" data-background-size="700px" data-background-repeat="repeat">
					<section>
					<!--TODO: Add bubbles of PaaS -->
						<h1>Let's Host Our Own Private Heroku!</h1>
					</section>
				</section>
				<section>
					<h2>What do They All Have in Common?</h2>
					<ul>
						<li>Application Platform (PaaS)</li>
						<li>Open Source</li>
						<li>Smart Containers</li>
						<li>Continuous Delivery</li>
						<li>Scale Instantly</li>
						<li>Focus on 12 Factor Apps</li>
						<li>Rich Add-ons</li>
						<li>Code Rollback</li>
						<li>Buildpacks for App Dependencies</li>
						<li>Zero-downtime deploy</li>
					</ul>
					<aside class="notes">
						<p>
						These are all open source platforms for deploying, scaling and managing applications.
						</p>
						<p>
						Unlike a hosted PaaS like Heroku, these platforms are designed to run anywhere in cloud, or on Premises. It's essentially a "Private Heroku". Build once, run anywhere.
						</p>
						<p>For runtime, they all have smart containers with fully managed runtime environment, configuration, orchestration, load balancing, failover, logging, and security support.
						</p>
						<p>
						With native git integration, you can push updates and manage releases directly to these platforms. You can also integrate with other systems like GitHub, TravisCI, Jenkins to make building, iterating, and staging apps easier.
						</p>
						<p>
						You can scale components in your application in an instant, both vertically and horizontally.
						</p>
						<p>
						They all follow the same philosophy as Heroku with the 12 factor apps methodology. It focuses on supporting applications that need to run well across a distributed system.
						</p>
						<p>
						They each have their own ecosystems of add-ons that allow you to extend your application with pre-integrated services
						</p>
						<p>
						With native git integration, you can manage releases, deploy updates, and perform code rollback using the normal git workflow process.
						</p>
						<p>
						TODO:
						As a developer, I want to work with language and frameworks I already love. These platforms all support existing Herokuish Buildpacks that support most of the common frameworks and language we use today. As Buildpacks are extensible, you can develop your own custom buildpacks to support dependencies in your application.
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<h1>Container vs VM</h1>
					<img src="img/containersvsvm.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
				<section data-background="#ffffff">
					<img src="img/containerappdiff.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What Does This Mean for Me?</h1>
					<aside class="notes">
						<p>
						The goal of a PaaS is to empower software teams to take responsibility for the entire application lifecycle.
						With a PaaS, developers deploy, scale and manage their own applications and CI/CD pipelines
						without having to involve the operations team.
						</p>
						<p>
						This is more than an "Orchestration tool" which helps you run containers across a distributed system. It includes orchestration features, but it is much more than orchestration.
						</p>
					</aside>
				</section>

				<section>
					<h2>Developer Self-Service</h2>
					<ul>
						<li>Create applications</li>
						<li>Deploy code or Docker images</li>
						<li>Configure runtime environment</li>
						<li>Manage releases and rollbacks</li>
						<li>View aggregated logs</li>
						<li>Scale via the process model</li>
						<li>Share resources</li>
						<li>Collaborate with a team</li>
					</ul>
					<aside class="notes">
						<p>
						PaaS provides developers with a self-service capability.
						</p>
						<p>
						With a PaaS, developers to create applications, push deploys with git, manage runtime configuration,
						handle releases and rollbacks, run admin tasks like schema migrations, view aggregated logs,
						scale the number of containers in service -- tasks typically associated with operations, not developers.
						</p>
						<p>
						If you've ever seen Heroku in action, you'll know that a developer with self-service capabilities
						can be amazingly productive -- and more importantly, happy!  Who doesn't want happy developers?
						</p>
					</aside>
				</section>

				<section data-background="#ffffff">
					<img src="img/dokku.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What is Dokku?</h1>
					<br/>
					<ul>
						<li>Docker powered mini-Heroku ~200 lines of Bash</li>
						<li>100% open source</li>
						<li>~11,547 stars, ~350 watchers, ~1,011 forks</li>
						<li>Push any Heroku-compatible applications via Git</li>
						<li>Extensible with dokku plugins</li>
						<li>Single-host instance, not multi-host, multi-tenant</li>
						<li>Dockerfile deployment, image tagging</li>
						<li>Zero-downtime deploy</li>
					</ul>
					<aside class="notes">
						<p>
						Dokku is an open source platform for deploying, scaling and managing applications.
						</p>
						<p>
						Powered by Docker, you can install Dokku on any hardware that runs a VM with Ubuntu 14.04 x64 or cloud providers like Azure, DigitalOcean, etc
						</p>
						<p>
						Dokku is currently sponsored by the multi-host PaaS project Deis.
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<img src="img/dokkutopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section data-background="#ffffff">
					<img src="img/DeisLogo.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What is Deis?</h1>
					<br/>
					<ul>
						<li>100% open source</li>
						<li>~5,516 stars, ~289 watchers, ~865 forks</li>
						<li>Go, Python &amp; Shell</li>
						<li>Multi-host PaaS</li>
						<li>Integrate with open source ecosystem</li>
					</ul>
					<aside class="notes">
						<p>
						Deis is an open source platform that makes it simple for developers to deploy their applications; quickly moving code to production
						</p>
						<p>
						The platform itself is mostly Go with a mix of Python and some Shell glue.
						</p>
						<p>
						The project has solid traction on GitHub. 
						growing users and contributors.
						</p>
						<p>
						Rather than build it all on their own, they integrated with adjancent projects and brought all that goodness into Deis. For example, the latest version comes with kubernetes and mesos scheduler. 
						</p>
						<p>
						Works with Heroku buildpacks and Cloud Foundry buildpacks. They are also considering using Cloud Foundry service brokers to integrate with other services.
						</p>
					</aside>
				</section>

				<section>
					<img src="img/DeisFoundation.png" class="stretch" style="border:none;background:none;box-shadow:0 0 0"/>
					<aside class="notes">
						<p>
						At the most basic level, Deis runs on CoreOS which provides a lightweight operating system
						that includes etcd, a distributed data store similar to Zookeeper but based on the Raft protocol.
						It also includes Fleet, which is a simple cluster scheduler that's backed by etcd.
						</p>
						<p>
						On top of CoreOS sits Docker, which is central to Deis.
						Everything Deis does, it does inside a Docker container.
						The applications we deploy are run as Docker containers.
						The platform itself is a series of Docker containers.
						This makes Deis incredibly easy to operate and easy to hack on.
						</p>
					</aside>
				</section>   

				<section data-background="#ffffff">
					<img src="img/deistopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
				<section data-background="#ffffff">
					<img src="img/DeisGitPushWorkflow.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
			
				<section data-background="#ffffff">
					<img src="img/cflogo.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>

				<section>
					<h1>What is Cloud Foundry?</h1>
					<br/>
					<ul>
						<li>Open source PaaS with Enterprise offerings</li>
						<li>1,300 contributors, 711K lines of code, 3,000 PRs</li>
						<li>Has it's own Buildpacks, similar to Heroku</li>
						<li>Rich add-ons for 3rd party integration</li>
						<li>A Marketplace of apps and services</li>
						<li>App Metrics</li>
					</ul>
					<aside class="notes">
						<p>
						CF is an open source PaaS, originally developed by VMware and now owned by Pivotal, startup in SF. 
						</p>
						<p>
						It has a solid reputation in the enterprise space powering products such as IBM Bluemix and the Chinese search engine Baidu. New deal with Yahoo Japan.
						</p>
						<p>
						Provides developers easy access to services like databases, messaging services, caching, etc
						<p>
						Similar to Heroku, developers can deploy applications using a variety of CF buildpacks to package the framework and runtime dependencies required for their application.
						</p>
						<p>
						App Metrics - built-in monitoring of throughput, response times, memory, CPU load, and errors. Offers a Web-based Dashboard that allows developers to manage app and view performance.
						</p>
					</aside>
				</section>
				<section data-background="#ffffff">
					<img src="img/CFTopology.png" class="stretch" style="border:none;background:white;box-shadow:0 0 0">
				</section>
			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.js"></script>
		<script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>
		<script src="js/pikestreet.js"></script>
	</body>
</html>
